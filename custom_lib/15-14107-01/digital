!!!!    6    0    1 1381220971  V824f                                         
!***  All contents copyright 2003 Cisco Systems Inc.
!***  All rights reserved.
!***  No portion of this software may be used or reproduced in any form, or
!***  by any means, without prior written permission from Cisco Systems, Inc.
!-----------------------------------------------------------------------
! Part Name:         tps53915
! Alias:
! Part Type:         Power On Analog
! Manufacturer:      Texas Instruments
! Package Style:     29 pin unknown
! Created:           Oct 8, 2013
! Programmer:        sc
! Tester:            HP3070
! Processor:
! Testjet Testable:  no
! JTAG Device:       no
! Fault coverage:    mixed
! Constraints:

!-----------------------------------------------------------------------
!
! Additional Comments:
!
!-----------------------------------------------------------------------
vector cycle 10u
receive delay 9u
!

assign VCC     to pins 19
assign GND     to pins 10,11,12,13,14,22,29
assign VIN     to pins 15,16,17,18

assign SCL     to pins 28
assign SDA     to pins 27

assign EN      to pins 3

assign ALERT   to pins 26
assign PGOOD   to pins 2

assign MODE    to pins 21

assign SW      to pins 5,6,7,8,9
assign VREG    to pins 20
assign TRIP    to pins 25
assign ADDR    to pins 1
assign VBST    to pins 4
assign VO      to pins 24
assign FB      to pins 23

family LVT

nondigital MODE,SW,VREG,TRIP,VBST,VO,FB
inputs SCL, EN, ADDR
outputs ALERT,PGOOD
bidirectional SDA
power  VCC,VIN,GND

disable SDA with SCL to "1"
set terminators to on

! ******************************************************************************
!  VECTORS
! ******************************************************************************

vector  Init
   drive SDA
   set   SCL                  to "1"
   set   SDA                  to "1"
end vector

vector  KEEP
   drive SDA
   set   SCL                  to "k"
   set   SDA                  to "k"
end vector

vector  Begin
   initialize                 to Keep
   drive SDA
   set   SCL                  to "1"
   set   SDA                  to "1"
end vector

vector  Start
   initialize                 to Keep
   drive SDA
   set   SCL                  to "1"
   set   SDA                  to "0"
end vector

vector  Stop
   initialize                 to Keep
   drive SDA
   set   SCL                  to "1"
   set   SDA                  to "1"
end vector

vector  SCL_0
   initialize                 to Keep
   drive SDA
   set   SCL                  to "0"
   set   SDA                  to "k"
end vector

vector  SCL_1
   initialize                 to Keep
   drive SDA
   set   SCL                  to "1"
   set   SDA                  to "k"
end vector

vector  Dd_0
   initialize                 to Keep
   drive SDA
   set   SCL                  to "k"
   set   SDA                  to "0"
end vector

vector  Dd_1
   initialize                 to Keep
   drive SDA
   set   SCL                  to "k"
   set   SDA                  to "1"
end vector

vector  SCL_0_D_X
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "0"
   set   SDA                  to "x"
end vector

vector  SCL_1_D_X
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "1"
   set   SDA                  to "x"
end vector

vector  ACK_S0
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "1"
   set   SDA                  to "0"
end vector

vector  SCL_R_0
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "0"
   set   SDA                  to "x"
end vector

vector  SCL_R_1
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "1"
   set   SDA                  to "x"
end vector

vector  Dr_0
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "k"
   set   SDA                  to "0"
end vector

vector  Dr_1
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "k"
   set   SDA                  to "1"
end vector

vector  ACK_M0
   initialize                 to Keep
   drive SDA
   set   SCL                  to "k"
   set   SDA                  to "0"
end vector

vector  ACK_M1
   initialize                 to Keep
   receive  SDA
   set   SCL                  to "k"
   set   SDA                  to "1"
end vector

vector  RW_0
   initialize                 to Keep
   drive SDA
   set   SCL                  to "k"
   set   SDA                  to "0"
end vector

vector  RW_1
   initialize                 to Keep
   drive SDA
   set   SCL                  to "k"
   set   SDA                  to "1"
end vector

vector  SCL_1_D_0
   initialize                 to Keep
   drive SDA
   set   SCL                  to "1"
   set   SDA                  to "0"
end vector

! ******************************************************************************
!  SUBS
! ******************************************************************************


sub  IC_Address_000 (RW)
   execute  SCL_0
   execute  Dd_1     !1
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  Dd_1     !0
   execute  SCL_1
   execute  SCL_0
   execute  Dd_1     !1
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  RW       !Read = 1  Write = 0
   execute  SCL_1
   execute  SCL_0_D_X
   execute  SCL_1_D_X
   execute  Ack_S0         !ACK von Slave
   execute  SCL_0_D_X
end sub

sub  IC_Address_010 (RW)
   execute  SCL_0
   execute  Dd_1     !1
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  Dd_1     !1
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  Dd_1     !1
   execute  SCL_1
   execute  SCL_0
   execute  Dd_0     !0
   execute  SCL_1
   execute  SCL_0
   execute  RW       !Read = 1  Write = 0
   execute  SCL_1
   execute  SCL_0_D_X
   execute  SCL_1_D_X
   execute  Ack_S0         !ACK von Slave
   execute  SCL_0_D_X
end sub

sub  Word_Address (D0,D1,D2,D3,D4,D5,D6,D7)
   execute  D0
   execute  SCL_1
   execute  SCL_0
   execute  D1
   execute  SCL_1
   execute  SCL_0
   execute  D2
   execute  SCL_1
   execute  SCL_0
   execute  D3
   execute  SCL_1
   execute  SCL_0
   execute  D4
   execute  SCL_1
   execute  SCL_0
   execute  D5
   execute  SCL_1
   execute  SCL_0
   execute  D6
   execute  SCL_1
   execute  SCL_0
   execute  D7
   execute  SCL_1
   execute  SCL_0_D_X
   execute  SCL_1_D_X
   execute  ACK_S0            !Ack von Slave
   execute  SCL_0_D_X
end sub

sub  Write_Data (D0,D1,D2,D3,D4,D5,D6,D7)
   execute  SCL_0_D_X     !1/3/00(mikef)
   execute  D0
   execute  SCL_1
   execute  SCL_0
   execute  D1
   execute  SCL_1
   execute  SCL_0
   execute  D2
   execute  SCL_1
   execute  SCL_0
   execute  D3
   execute  SCL_1
   execute  SCL_0
   execute  D4
   execute  SCL_1
   execute  SCL_0
   execute  D5
   execute  SCL_1
   execute  SCL_0
   execute  D6
   execute  SCL_1
   execute  SCL_0
   execute  D7
   execute  SCL_1
   execute  SCL_0_D_X
   execute  SCL_1_D_X
   execute  ACK_S0
   execute  SCL_0_D_X
   execute  Dd_0
   execute  SCL_0
   execute  SCL_1
end sub

sub  Read_Data (D0,D1,D2,D3,D4,D5,D6,D7)
   execute  SCL_R_1
   execute  D0        !D0
   execute  SCL_R_0
   execute  SCL_R_1
   execute  D1        !D1
   execute  SCL_R_0
   execute  SCL_R_1
   execute  D2        !D2
   execute  SCL_R_0
   execute  SCL_R_1
   execute  D3        !D3
   execute  SCL_R_0
   execute  SCL_R_1
   execute  D4        !D4
   execute  SCL_R_0
   execute  SCL_R_1
   execute  D5        !D5
   execute  SCL_R_0
   execute  SCL_R_1
   execute  D6        !D6
   execute  SCL_R_0
   execute  SCL_R_1
   execute  D7        !D7
   execute  SCL_0_D_X
   execute  ACK_M0            !Ack von Master
   execute  SCL_1_D_0
   execute  SCL_0_D_X
end sub


sub  Write_Data_No_Stop (D0,D1,D2,D3,D4,D5,D6,D7)
   execute  SCL_0_D_X     !1/3/00(mikef)
   execute  D0
   execute  SCL_1
   execute  SCL_0
   execute  D1
   execute  SCL_1
   execute  SCL_0
   execute  D2
   execute  SCL_1
   execute  SCL_0
   execute  D3
   execute  SCL_1
   execute  SCL_0
   execute  D4
   execute  SCL_1
   execute  SCL_0
   execute  D5
   execute  SCL_1
   execute  SCL_0
   execute  D6
   execute  SCL_1
   execute  SCL_0
   execute  D7
   execute  SCL_1
   execute  SCL_0_D_X
   execute  SCL_1_D_X
   execute  ACK_S0
   execute  SCL_0_D_X
!  execute  Dd_0
!  execute  SCL_0
!  execute  SCL_1
end sub

sub Reset
   repeat 10 times
     execute SCL_0
     execute SCL_1
     execute SCL_0
   end repeat
end sub

! ******************************************************************************
!  UNITS
! ******************************************************************************


unit  "Read ID Code"
   execute  Init
   continue analog
   execute  Begin   ! c=1 d=1
   call Reset
   execute  Start   ! c=1 d=0
   execute  Stop    ! c=1 d=1
   call  IC_Address_010 (RW_0)       !!Pin 11 floating
   call  Word_Address (Dd_0,Dd_1,Dd_0,Dd_0, Dd_1,Dd_1,Dd_0,Dd_1) !0x4D
   execute  Begin
   execute  Start
   call  IC_Address_010 (RW_1)
   call  Read_Data(Dr_0,Dr_0,Dr_0,Dr_0, Dr_0,Dr_0,Dr_1,Dr_0) !ID - 0x02
   call  Read_Data(Dr_0,Dr_1,Dr_0,Dr_0, Dr_0,Dr_0,Dr_0,Dr_1) !Manf ID - 0x41
   call  Read_Data(Dr_0,Dr_0,Dr_0,Dr_0, Dr_0,Dr_1,Dr_0,Dr_0) !Silicon Rev 0x04
   execute  Stop
end unit
!
!  End of test
!





